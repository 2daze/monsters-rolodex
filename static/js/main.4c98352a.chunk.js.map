{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsterList","monsters","map","console","log","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filter","toLowerCase","includes","getFilteredMonsters","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCJXC,EAAW,SAAAR,GACtB,IAAMS,EAAc,WAClB,OAAOT,EAAMU,SAASC,KAAI,SAAAP,GACxB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,QAK9B,OADAO,QAAQC,IAAIJ,GAEV,sBAAKR,UAAU,YAAf,cAA6BQ,IAA7B,QCVSK,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCDG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAoBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SApBzC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEX,SAAUoB,S,iCAG7C,WAAuB,IAAD,EACcC,KAAKN,MAA/Bf,EADY,EACZA,SAAUY,EADE,EACFA,YAClB,OAAOZ,EAASsB,QAAO,SAAA5B,GACrB,OAAOA,EAAQE,KAAK2B,cAAcC,SAASZ,EAAYW,oB,oBAQ3D,WACE,OACE,sBAAKhC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACEc,YAAY,kBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUN,SAAUqB,KAAKI,+B,GAlCfC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c98352a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img alt=\"moster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n      <h2 key={props.monster.id}>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport './CardList.styles.css';\r\nimport { Card } from './Card';\r\n\r\nexport const CardList = props =>{\r\n  const monsterList = () => { \r\n    return props.monsters.map(monster => {\r\n      return <Card key={monster.id} monster={monster} />;\r\n    });\r\n  };\r\n\r\n  console.log(monsterList);\r\n  return (\r\n    <div className=\"card-list\"> {monsterList()} </div>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport './SearchBox.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input \r\n      type='search' \r\n      placeholder={placeholder} \r\n      onChange={handleChange} />\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/CardList';\nimport { SearchBox } from './components/SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  } \n\n  getFilteredMonsters() {\n    const { monsters, searchField } = this.state;\n    return monsters.filter(monster =>  { \n      return monster.name.toLowerCase().includes(searchField.toLowerCase())\n    });\n  }\n\n  handleChange = event => {\n    this.setState({searchField: event.target.value});\n  };\n\n  render() {\n    return (\n      <div className='App'>\n      <h1>Monsters Rolodex</h1>  \n      <SearchBox \n        placeholder='search monsters' \n        handleChange={this.handleChange} />\n\n        <CardList monsters={this.getFilteredMonsters()} />\n      </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}